{"ast":null,"code":"var _jsxFileName = \"/home/mariano/movies-curso-react/src/pages/movieDetails/MovieDetails.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport { Spinner } from \"../../components/spinner/Spinner\";\nimport { get } from \"../../utils/httpClient\";\nimport styles from \"./MovieDetails.module.css\"; //esta es la vista de los detalles de un pelicula voy a usar use params para recoger el id del pelicula\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function MovieDetails() {\n  _s();\n\n  const {\n    movieId\n  } = useParams();\n  const [isLoading, setIsLoading] = useState(true);\n  const [movie, setMovie] = useState(null);\n  useEffect(() => {\n    setIsLoading(true);\n    get(\"/movie/\" + movieId).then(data => {\n      setMovie(data); //guardamos la data en movie\n\n      setIsLoading(false);\n    });\n  }, [movieId]); //aca pasamos como dependencia la movieId para que se ejecute el useEffect cada vez que se modifique esa busqueda\n\n  console.log(movie);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }, this);\n  }\n\n  const imageUrl = \"https://image.tmdb.org/t/p/w500\" + movie.return( /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.detailsContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: `${styles.col} ${styles.movieImage}`,\n      src: imageUrl,\n      alt: movie.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${styles.col} ${styles.movieDetails}`,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.firstItem,\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), \" \", movie.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Genres:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), \" \", movie.genres.map(genre => genre.name).join(\", \")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), \" \", movie.overview]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 7\n  }, this));\n}\n\n_s(MovieDetails, \"uwLDMKdUYuQPV5EqgKLwxRyoPUg=\", false, function () {\n  return [useParams];\n});\n\n_c = MovieDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieDetails\");","map":{"version":3,"sources":["/home/mariano/movies-curso-react/src/pages/movieDetails/MovieDetails.jsx"],"names":["useEffect","useState","useParams","Spinner","get","styles","MovieDetails","movieId","isLoading","setIsLoading","movie","setMovie","then","data","console","log","imageUrl","return","detailsContainer","col","movieImage","title","movieDetails","firstItem","genres","map","genre","name","join","overview"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,OAAT,QAAwB,kCAAxB;AACA,SAASC,GAAT,QAAoB,wBAApB;AACA,OAAOC,MAAP,MAAmB,2BAAnB,C,CAEA;;;AACA,OAAO,SAASC,YAAT,GAAwB;AAAA;;AAC7B,QAAM;AAAEC,IAAAA;AAAF,MAAcL,SAAS,EAA7B;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,IAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,YAAY,CAAC,IAAD,CAAZ;AAEAL,IAAAA,GAAG,CAAC,YAAYG,OAAb,CAAH,CAAyBK,IAAzB,CAA+BC,IAAD,IAAU;AACtCF,MAAAA,QAAQ,CAACE,IAAD,CAAR,CADsC,CAEtC;;AACAJ,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAJD;AAKD,GARQ,EAQN,CAACF,OAAD,CARM,CAAT,CAL6B,CAc7B;;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;;AACA,MAAIF,SAAJ,EAAe;AACb,wBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,QAAMQ,QAAQ,GACZ,oCACAN,KAAK,CAACO,MAAN,eACE;AAAK,IAAA,SAAS,EAAEZ,MAAM,CAACa,gBAAvB;AAAA,4BACE;AACE,MAAA,SAAS,EAAG,GAAEb,MAAM,CAACc,GAAI,IAAGd,MAAM,CAACe,UAAW,EADhD;AAEE,MAAA,GAAG,EAAEJ,QAFP;AAGE,MAAA,GAAG,EAAEN,KAAK,CAACW;AAHb;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAK,MAAA,SAAS,EAAG,GAAEhB,MAAM,CAACc,GAAI,IAAGd,MAAM,CAACiB,YAAa,EAArD;AAAA,8BACE;AAAG,QAAA,SAAS,EAAEjB,MAAM,CAACkB,SAArB;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,OAC2Bb,KAAK,CAACW,KADjC;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAC2B,GAD3B,EAEGX,KAAK,CAACc,MAAN,CAAaC,GAAb,CAAkBC,KAAD,IAAWA,KAAK,CAACC,IAAlC,EAAwCC,IAAxC,CAA6C,IAA7C,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAQE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,OACiClB,KAAK,CAACmB,QADvC;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CAFF;AAuBD;;GA3CevB,Y;UACMJ,S;;;KADNI,Y","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { Spinner } from \"../../components/spinner/Spinner\";\r\nimport { get } from \"../../utils/httpClient\";\r\nimport styles from \"./MovieDetails.module.css\";\r\n\r\n//esta es la vista de los detalles de un pelicula voy a usar use params para recoger el id del pelicula\r\nexport function MovieDetails() {\r\n  const { movieId } = useParams();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [movie, setMovie] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n\r\n    get(\"/movie/\" + movieId).then((data) => {\r\n      setMovie(data);\r\n      //guardamos la data en movie\r\n      setIsLoading(false);\r\n    });\r\n  }, [movieId]);\r\n  //aca pasamos como dependencia la movieId para que se ejecute el useEffect cada vez que se modifique esa busqueda\r\n  console.log(movie);\r\n  if (isLoading) {\r\n    return <Spinner />;\r\n  }\r\n\r\n  const imageUrl =\r\n    \"https://image.tmdb.org/t/p/w500\" +\r\n    movie.return(\r\n      <div className={styles.detailsContainer}>\r\n        <img\r\n          className={`${styles.col} ${styles.movieImage}`}\r\n          src={imageUrl}\r\n          alt={movie.title}\r\n        />\r\n        <div className={`${styles.col} ${styles.movieDetails}`}>\r\n          <p className={styles.firstItem}>\r\n            <strong>Title:</strong> {movie.title}\r\n          </p>\r\n          <p>\r\n            <strong>Genres:</strong>{\" \"}\r\n            {movie.genres.map((genre) => genre.name).join(\", \")}\r\n          </p>\r\n          <p>\r\n            <strong>Description:</strong> {movie.overview}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}