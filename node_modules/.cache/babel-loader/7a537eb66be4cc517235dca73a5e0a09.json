{"ast":null,"code":"var _jsxFileName = \"/home/mariano/movies-curso-react/src/components/movieGrid/MoviesGrid.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useQuery } from \"../../hooks/useQuery\";\nimport { get } from \"../../utils/httpClient\";\nimport { MovieCard } from \"../movieCard/MovieCard\";\nimport styles from \"./MoviesGrid.module.css\";\nimport { Spinner } from \"../spinner/Spinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function MoviesGrid() {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const query = useQuery();\n  const search = query.get(\"search\");\n  useEffect(() => {\n    setIsLoading(true);\n    const searchUrl = search ? //esta es la forma de buscar por query en esta api\n    //si hay search buscamos la ruta esta + el parametro search que tenemos guardado\n    //del input sino hay search buscamos todas las peliculas\n    \"/search/movie?query=\" + search : \"/discover/movie\";\n    get(searchUrl).then(data => {\n      setMovies(data.results);\n      setIsLoading(false);\n    });\n  }, [search]);\n  console.log(data.results);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: styles.moviesGrid,\n    children: movies.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n      movie: movie\n    }, movie.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MoviesGrid, \"dq3NNRXqxJi6UHY0CR8JvPuWxdI=\", false, function () {\n  return [useQuery];\n});\n\n_c = MoviesGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"MoviesGrid\");","map":{"version":3,"sources":["/home/mariano/movies-curso-react/src/components/movieGrid/MoviesGrid.jsx"],"names":["useEffect","useState","useQuery","get","MovieCard","styles","Spinner","MoviesGrid","movies","setMovies","isLoading","setIsLoading","query","search","searchUrl","then","data","results","console","log","moviesGrid","map","movie","id"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,QAAT,QAAyB,sBAAzB;AACA,SAASC,GAAT,QAAoB,wBAApB;AACA,SAASC,SAAT,QAA0B,wBAA1B;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,OAAT,QAAwB,oBAAxB;;AAEA,OAAO,SAASC,UAAT,GAAsB;AAAA;;AAC3B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,IAAD,CAA1C;AAEA,QAAMW,KAAK,GAAGV,QAAQ,EAAtB;AACA,QAAMW,MAAM,GAAGD,KAAK,CAACT,GAAN,CAAU,QAAV,CAAf;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,UAAMG,SAAS,GAAGD,MAAM,GACpB;AACA;AACA;AACA,6BAAyBA,MAJL,GAKpB,iBALJ;AAMAV,IAAAA,GAAG,CAACW,SAAD,CAAH,CAAeC,IAAf,CAAqBC,IAAD,IAAU;AAC5BP,MAAAA,SAAS,CAACO,IAAI,CAACC,OAAN,CAAT;AACAN,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAHD;AAID,GAZQ,EAYN,CAACE,MAAD,CAZM,CAAT;AAaAK,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACC,OAAjB;;AACA,MAAIP,SAAJ,EAAe;AACb,wBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAI,IAAA,SAAS,EAAEL,MAAM,CAACe,UAAtB;AAAA,cACGZ,MAAM,CAACa,GAAP,CAAYC,KAAD,iBACV,QAAC,SAAD;AAA0B,MAAA,KAAK,EAAEA;AAAjC,OAAgBA,KAAK,CAACC,EAAtB;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAhCehB,U;UAIAL,Q;;;KAJAK,U","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useQuery } from \"../../hooks/useQuery\";\r\nimport { get } from \"../../utils/httpClient\";\r\nimport { MovieCard } from \"../movieCard/MovieCard\";\r\nimport styles from \"./MoviesGrid.module.css\";\r\nimport { Spinner } from \"../spinner/Spinner\";\r\n\r\nexport function MoviesGrid() {\r\n  const [movies, setMovies] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const query = useQuery();\r\n  const search = query.get(\"search\");\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    const searchUrl = search\r\n      ? //esta es la forma de buscar por query en esta api\r\n        //si hay search buscamos la ruta esta + el parametro search que tenemos guardado\r\n        //del input sino hay search buscamos todas las peliculas\r\n        \"/search/movie?query=\" + search\r\n      : \"/discover/movie\";\r\n    get(searchUrl).then((data) => {\r\n      setMovies(data.results);\r\n      setIsLoading(false);\r\n    });\r\n  }, [search]);\r\n  console.log(data.results);\r\n  if (isLoading) {\r\n    return <Spinner />;\r\n  }\r\n\r\n  return (\r\n    <ul className={styles.moviesGrid}>\r\n      {movies.map((movie) => (\r\n        <MovieCard key={movie.id} movie={movie} />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}